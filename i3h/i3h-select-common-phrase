#!/bin/env python3
import os
import json
import sys
import tty
import termios

USAGE = f"""
{__file__}

Displays the common phrases and asks the user to select one.
Reads from ~/.config/i3h/common-phrases.json.
Writes user questions to file descriptor 1, and the answer to file descriptor 3."""

CONFIG_FILE = os.path.abspath(os.path.expanduser("~/.config/i3h/common-phrases.json"))


def is_file(f):
    return os.path.isfile(f)


def is_readable(f):
    return os.access(f, os.R_OK, follow_symlinks=True)


def exit_err(msg):
    print(f"ERROR: {msg}", file=sys.stderr)
    print(USAGE, file=sys.stderr)
    exit(1)


def print_option(option):
    print(f"{option['shortcut']} -> {option['phrase']}", flush=True)


def getch():
    fd = sys.stdin.fileno()
    old_settings = termios.tcgetattr(fd)
    try:
        tty.setraw(fd)
        ch = sys.stdin.read(1)
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)
    return ch


if __name__ == "__main__":

    # Check args
    if len(sys.argv) > 1:
        exit_err("No arguments are expected")
        exit(1)

    # Check if file is readable
    if not is_file(CONFIG_FILE) or not is_readable(CONFIG_FILE):
        exit_err(f"{CONFIG_FILE} is not a (readable) file")
        exit(1)

    # Loads
    with open(CONFIG_FILE) as f:
        options = json.load(f)

    # Print opts
    print('Select one of the shortcuts:', flush=True)
    for option in options:
        print_option(option)

    # Prompts for selection
    selected = getch()

    # Captures selected
    try:
        selected_phrase = next(o['phrase'] for o in options if o['shortcut'] == selected)
    except StopIteration:
        exit_err("Invalid shortcut!")
        exit(1)

    # Writes answer to file descriptor 3
    os.write(3, selected_phrase.encode())
