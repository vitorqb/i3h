#!/bin/env python3
import os
import json
import sys
import subprocess
import argparse

DESCRIPTION = """\
Displays the common phrases and asks the user to select one. Returns the selected text.
Depends on GTK+3."""

parser = argparse.ArgumentParser(description=DESCRIPTION)
parser.add_argument(
    '-c',
    '--config-file',
    default=os.path.abspath(os.path.expanduser("~/.config/i3h/common-phrases.json")),
    help=("The json configuration file with the phrases to be read."
          "Must be a json array with objects containing `shortcut` and `phrase`"),
)
parser.add_argument(
    '--skwin-path',
    help="Path to skwin executable",
    default="/usr/lib/i3h/skwin"
)


def is_file(f):
    return os.path.isfile(f)


def is_readable(f):
    return os.access(f, os.R_OK, follow_symlinks=True)


def exit_err(msg):
    print(f"ERROR: {msg}", file=sys.stderr)
    exit(1)


def option_to_str(option):
    return f"{option['shortcut']} -> {option['phrase']}"


def getch(args, prompt):
    return subprocess.check_output(args.skwin_path, input=prompt.encode()).decode()


if __name__ == "__main__":

    # Check args
    args = parser.parse_args()

    # Check if file is readable
    if not is_file(args.config_file) or not is_readable(args.config_file):
        exit_err(f"{args.config_file} is not a (readable) file")

    # Loads
    with open(args.config_file) as f:
        options = json.load(f)

    # Prepares prompt
    prompt = 'Select one of the shortcuts:'
    for option in options:
        prompt += '\n' + option_to_str(option)

    # Prompts for selection
    selected = getch(args, prompt)

    # Captures selected
    try:
        selected_phrase = next(o['phrase'] for o in options if o['shortcut'] == selected)
    except StopIteration:
        exit_err("Invalid shortcut!")
        exit(1)

    # Prints answer
    print(selected_phrase, flush=True)
